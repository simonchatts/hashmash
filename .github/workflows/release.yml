# Build a set of release binaries when we tag a new version.

# Commented out some builds that use ancient github actions that no longer work

on:
  push:
    tags:
      - 'v*'
name: Release-candidate binaries
permissions:
  contents: read
jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - run: cargo check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'
  # debbuild:
  #   needs: [quickcheck]
  #   runs-on: ubuntu-latest
  #   name: Amd64Deb
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: BuildDeb
  #     id: debbuild
  #     uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
  #   - name: Upload Deb Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: amd64deb
  #       path: ./target/x86_64-unknown-linux-musl/debian/*
  # raspbianbuild:
  #   needs: [quickcheck]
  #   runs-on: ubuntu-latest
  #   name: Armv7Deb
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: BuildDeb
  #     id: debbuild
  #     uses: ebbflow-io/cargo-deb-armv7-debian@1.47.0-1
  #   - name: Upload Deb Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: armv7deb
  #       path: ./target/armv7-unknown-linux-musleabihf/debian/*
  windowsbuild:
    needs: [quickcheck]
    runs-on: windows-latest
    env:
      RUSTFLAGS: '-C target-feature=+crt-static'
    name: Windows
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Build
      run: cargo build --release
    - name: Upload Bin Artifact
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: windows
        path: ./target/release/hashmash.exe
  macosbuild:
    needs: [quickcheck]
    runs-on: macos-latest
    name: MacOS
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Build
      run: cargo build --release
    - name: Upload Bin Artifact
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: macos
        path: ./target/release/hashmash
  # amd64binary:
  #   needs: [quickcheck]
  #   runs-on: ubuntu-latest
  #   name: Amd64StaticBinary
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: StaticBinaryBuild
  #     id: amd64staticbuild
  #     uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
  #     with:
  #       cmd: cargo build --release --target=x86_64-unknown-linux-musl
  #   - name: Upload Bin Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: amd64binary
  #       path: ./target/x86_64-unknown-linux-musl/release/hashmash
  # arm7binary:
  #   needs: [quickcheck]
  #   runs-on: ubuntu-latest
  #   name: Armv7StaticBinary
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: StaticBinaryBuild
  #     id: armv7statibuild
  #     uses: ebbflow-io/cargo-deb-armv7-debian@1.47.0-1
  #     with:
  #       cmd: cargo build --release --target=armv7-unknown-linux-musleabihf
  #   - name: Upload Bin Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: armv7binary
  #       path: ./target/armv7-unknown-linux-musleabihf/release/hashmash
  update_release_draft:
    needs: [quickcheck,  macosbuild, windowsbuild]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ needs.quickcheck.outputs.version }}'
          release_name: Release ${{ needs.quickcheck.outputs.version }}
          body: 'Change Me'
          draft: true
          prerelease: false
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - run: ls -lha
      # - name: Upload amd64 deb Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./amd64deb/hashmash_${{needs.quickcheck.outputs.version}}_amd64.deb
      #     asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_amd64.deb'
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Upload armv7 deb Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./armv7deb/hashmash_${{needs.quickcheck.outputs.version}}_armhf.deb
      #     asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_armhf.deb'
      #     asset_content_type: application/vnd.debian.binary-package
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/hashmash.exe
          asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_windows.exe'
          asset_content_type: application/octet-stream
      - name: Upload MacOS Release Asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/hashmash
          asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_macos_intel'
          asset_content_type: application/octet-stream
      # - name: Upload Armv7 Static Binary Zip Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./armv7binary/hashmash
      #     asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_linux_armv7_binary'
      #     asset_content_type: application/octet-stream
      # - name: Upload Amd64 Static Binary Zip Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./amd64binary/hashmash
      #     asset_name: 'hashmash_${{needs.quickcheck.outputs.version}}_linux_x86-64_binary'
      #     asset_content_type: application/octet-stream
